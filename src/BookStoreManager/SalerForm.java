/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BookStoreManager;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSetMetaData;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Random;
import java.util.Vector;
import javax.swing.JFrame;


/**
 *
 * @author honkaiwaifu
 */
public class SalerForm extends javax.swing.JFrame {
    Connection con = NewConnection.getConnection();
    PreparedStatement ps, ps1, ps2;
    ResultSet rs, rs1, rs2;
    DefaultTableModel d;
    /**
     * Creates new form DAILYDOC
     */
    public SalerForm() {
        initComponents();
        
        User_load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        MaHD = new javax.swing.JTextField();
        MaKH = new javax.swing.JTextField();
        TenKH = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        BillInfoTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        TelKH = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        EmployeeName = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        EmployeeCode = new javax.swing.JLabel();
        CreateBill = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        DateCreate = new org.jdesktop.swingx.JXDatePicker();
        AddCustomer = new javax.swing.JButton();
        FindCustomer = new javax.swing.JButton();
        LevelSelection = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        TenSach = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        AddPackage = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        GiaTri = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        MaSach = new javax.swing.JComboBox<>();
        SoLuong = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        TotalPrice = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        FinalPrice = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        CustomerPay = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        ExcessCash = new javax.swing.JTextField();
        PaymentButton = new javax.swing.JButton();
        Help = new javax.swing.JButton();
        DelPackage = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        DateBuy = new org.jdesktop.swingx.JXDatePicker();
        DeleteBill = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setEnabled(false);

        jPanel2.setBackground(new java.awt.Color(230, 34, 34));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MẪU BÁN HÀNG");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Mã hoá đơn");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Mã khách hàng");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Tên khách hàng");

        MaHD.setEditable(false);
        MaHD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        MaHD.setText("Mã ngẫu nhiên");

        MaKH.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        MaKH.setText("Mã ngẫu nhiên");
        MaKH.setEnabled(false);

        TenKH.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TenKH.setEnabled(false);

        BillInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hoá đơn", "Mã sách", "Giá trị", "Số lượng", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BillInfoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BillInfoTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BillInfoTable);
        if (BillInfoTable.getColumnModel().getColumnCount() > 0) {
            BillInfoTable.getColumnModel().getColumn(0).setHeaderValue("Mã hoá đơn");
        }

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Số điện thoại");

        TelKH.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TelKH.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("NHÂNH VIÊN BÁN HÀNG: ");

        EmployeeName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EmployeeName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EmployeeName.setText("Tên nhân viên");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("MÃ NHÂN VIÊN");

        EmployeeCode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EmployeeCode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EmployeeCode.setText("Mã nhân viên");

        CreateBill.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        CreateBill.setText("Tạo đơn");
        CreateBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateBillActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("THÊM KHÁCH HÀNG");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Thứ hạng");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Ngày lập");

        DateCreate.setEnabled(false);

        AddCustomer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AddCustomer.setText("Thêm");
        AddCustomer.setEnabled(false);
        AddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCustomerActionPerformed(evt);
            }
        });

        FindCustomer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FindCustomer.setText("Tra cứu");
        FindCustomer.setEnabled(false);
        FindCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindCustomerActionPerformed(evt);
            }
        });

        LevelSelection.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LevelSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn thứ hạng", "Thân thiết", "Bạc", "Vàng", "Bạch kim" }));
        LevelSelection.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Mã sách");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Tên sách");

        TenSach.setEditable(false);
        TenSach.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TenSach.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 51));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("THÊM MẶT HÀNG");

        AddPackage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AddPackage.setText("Thêm");
        AddPackage.setEnabled(false);
        AddPackage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddPackageActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Giá trị");

        GiaTri.setEditable(false);
        GiaTri.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        GiaTri.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Số lượng");

        MaSach.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        MaSach.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn mã sách" }));
        MaSach.setEnabled(false);
        MaSach.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                MaSachPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        SoLuong.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        SoLuong.setEnabled(false);
        SoLuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SoLuongKeyReleased(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("THÀNH TIỀN");

        TotalPrice.setEditable(false);
        TotalPrice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TotalPrice.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("TỔNG TIỀN");

        FinalPrice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        FinalPrice.setEnabled(false);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Khách trả");

        CustomerPay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        CustomerPay.setEnabled(false);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Số dư");

        ExcessCash.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ExcessCash.setEnabled(false);

        PaymentButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        PaymentButton.setText("THANH TOÁN");
        PaymentButton.setEnabled(false);
        PaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaymentButtonActionPerformed(evt);
            }
        });

        Help.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Help.setText("?");
        Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpActionPerformed(evt);
            }
        });

        DelPackage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DelPackage.setText("Xoá");
        DelPackage.setEnabled(false);
        DelPackage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelPackageActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Ngày mua");

        DeleteBill.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DeleteBill.setText("Xoá đơn");
        DeleteBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TenKH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MaKH, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(TelKH)
                                    .addComponent(LevelSelection, 0, 162, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DateCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(AddCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(FindCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TenSach, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(GiaTri)
                                    .addComponent(MaSach, 0, 162, Short.MAX_VALUE)
                                    .addComponent(SoLuong))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(77, 77, 77)
                                        .addComponent(TotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(126, 126, 126)
                                        .addComponent(jLabel17))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(DelPackage, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(AddPackage, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(25, 25, 25))))
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(FinalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(CustomerPay, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ExcessCash, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(PaymentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MaHD, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(DateBuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(CreateBill, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Help))
                    .addComponent(DeleteBill, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(317, 317, 317))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmployeeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EmployeeName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EmployeeCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(CreateBill)
                    .addComponent(Help))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(DateBuy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DeleteBill))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(DateCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(TenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(TelKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FindCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(LevelSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(MaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(TenSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(GiaTri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(AddPackage, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DelPackage, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel16)
                                .addComponent(SoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FinalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CustomerPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ExcessCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PaymentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //Load bảng từ SQL Server
    public void User_load() {
        
        LevelSelection.setSelectedIndex(0);
        MaSach.setSelectedIndex(0);
        
        String getusername = SalerPageForm.SalerAcc.getText();
        //danh sach thong tin sach
        
        try {
            //nap ten nhan vien ma nhan vien ung voi tai khoan dang nhap
            ps = con.prepareStatement("SELECT NHANVIEN.MaNV, NHANVIEN.TenNV "
                    + "FROM DANGNHAP, NHANVIEN WHERE NHANVIEN.MaNV = DANGNHAP.MaNV "
                    + "AND DANGNHAP.Username = ?");
            ps.setString(1, getusername);
            rs = ps.executeQuery();
            while (rs.next()) {
                EmployeeCode.setText(rs.getString(1));
                EmployeeName.setText(rs.getString(2));
            }
            
            //danh sach ma sach
            ps1 = con.prepareStatement("SELECT MaSach FROM THONGTINSACH ");
            rs1 = ps1.executeQuery();
            while (rs1.next()) {
                String type = rs1.getString("MaSach");
                MaSach.addItem(type);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
                                                                                                      
    }
    
    public void loadBillInfo() {
        int c;
        try {
            //load from CHITIETHOADON
            ps2 = con.prepareStatement("SELECT * FROM CHITIETHOADON WHERE MaHD = ?");
            ps2.setString(1, MaHD.getText());
            rs2 = ps2.executeQuery();
            
            ResultSetMetaData rad = rs2.getMetaData();
            c = rad.getColumnCount();
            
            d = (DefaultTableModel)BillInfoTable.getModel();
            d.setRowCount(0);
            
            while (rs2.next()) {
                Vector v2 = new Vector();
                for (int i = 1; i <= c; i++) {
                    v2.add(rs2.getString("MaHD"));
                    v2.add(rs2.getString("MaSach"));
                    v2.add(rs2.getString("GiaTri"));
                    v2.add(rs2.getString("SoLuong"));
                    v2.add(rs2.getString("ThanhTien"));
                }
                d.addRow(v2);
            }
             d.fireTableDataChanged();
        } catch (SQLException ex) {
            Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }
    
     //thao tac tren bang  
    private void BillInfoTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BillInfoTableMouseClicked
        d = (DefaultTableModel)BillInfoTable.getModel();
        int selectIndex = BillInfoTable.getSelectedRow();        
        MaHD.setText(d.getValueAt(selectIndex, 0).toString());
        MaSach.setSelectedItem(d.getValueAt(selectIndex, 1).toString());
        GiaTri.setText(d.getValueAt(selectIndex, 2).toString());
        SoLuong.setText(d.getValueAt(selectIndex, 3).toString());
        TotalPrice.setText(d.getValueAt(selectIndex, 4).toString());
        
        String mh = d.getValueAt(selectIndex, 1).toString();
        try {
            ps = con.prepareStatement("SELECT TenSach FROM THONGTINSACH WHERE MaSach = ? ");
            ps.setString(1, mh);
            rs = ps.executeQuery();
            if (rs.next()) {             
                TenSach.setText(rs.getString("TenSach"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BillInfoTableMouseClicked
    //tạo đơn hàng
    private void CreateBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateBillActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");        
        //tao ma don hang ngau nhien 6 chu so
        Random rnd = new Random();
        int number = rnd.nextInt(999999);
        // this will convert any number sequence into 6 character.
        String billcode = String.format("%06d", number);
        ///////////////////////////////////////////
        String emplcode = EmployeeCode.getText();
        String date = sdf.format(DateBuy.getDate());
        MaHD.setText(billcode);
        loadBillInfo();
        if(date.equals("")) {
            JOptionPane.showMessageDialog(this, "Nhập ngày mua",
                            "Thông báo",JOptionPane.ERROR_MESSAGE);
        }
        else {
            try {
                ps = con.prepareStatement("INSERT INTO HOADON(MaHD, MaNV, NgayMua) VALUES (?,?,?)");
                ps.setString(1, billcode);
                ps.setString(2, emplcode);
                ps.setString(3, date);
                ps.executeUpdate();
                ClearText();
                EnableFunction();
                //Kích hoạt thêm thông tin khách hàng, thêm mặt hàng để thanh toán

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Nhập ngày mua",
                            "Thông báo",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_CreateBillActionPerformed

    private void HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Luôn bấm nút tạo đơn để thực hiện thanh toán\n"
                            + "Nếu không hiện mã hoá đơn, chọn ngày mua và thử lại",
                            "Thông báo",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_HelpActionPerformed
    //Thêm khách hàng
    private void AddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCustomerActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String billcode ,makh, name, tel, level, date;
        billcode = MaHD.getText();
        //tao ma don hang ngau nhien 6 chu so
        Random rnd = new Random();
        int number = rnd.nextInt(999999);
        // this will convert any number sequence into 6 character.
        makh = String.format("%06d", number);
        ///////////////////////////////////////////
        name = TenKH.getText();
        tel = TelKH.getText();
        level = LevelSelection.getSelectedItem().toString();
        date = sdf.format(DateCreate.getDate());
        MaKH.setText(makh);
        
        if (name.equals("") || tel.equals("") || level.equals("Chọn thứ hạng") || date.equals("")) {
            JOptionPane.showMessageDialog(this, "Trường thông tin còn trống",
                            "Thông báo",JOptionPane.ERROR_MESSAGE);        
        }
        else {
            try {                
                ps1 = con.prepareStatement("SELECT SDT, COUNT(SDT) AS VAIL "
                        + "FROM KHACHHANG WHERE SDT = ? GROUP BY SDT");
                ps1.setString(1, tel);
                rs = ps1.executeQuery();
                if (rs.next()) {
                    Integer vaild = Integer.valueOf(rs.getString("VAILD"));
                    if (vaild >= 1) {
                        JOptionPane.showMessageDialog(null, "Số điện thoại đã tồn tại",
                            "Thông báo",JOptionPane.ERROR_MESSAGE);
                    }                    
                }
                else {
                       //Thêm khách hàng vào hệ thống
                       ps = con.prepareStatement("INSERT KHACHHANG(MaKH, HoTenKH, SDT, ThuHang, NgayLapThe) VALUES (?,?,?,?,?)");
                       ps.setString(1, makh); 
                       ps.setString(2, name);
                       ps.setString(3, tel);
                       ps.setString(4, level);
                       ps.setString(5, date);
                       ps.executeUpdate();
                       JOptionPane.showMessageDialog(null, "Thêm thông tin thành công",
                            "Thông báo",JOptionPane.INFORMATION_MESSAGE);
                       //Thêm mã khách hàng vào bảng hoá đơn
                        ps1 = con.prepareStatement("UPDATE HOADON SET MaKH = ? WHERE MaHD = ? ");
                        ps1.setString(1, makh);
                        ps1.setString(2, billcode);
                        ps1.executeUpdate();
                       
                      
                    }
                
            } catch (SQLException ex) {
                Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_AddCustomerActionPerformed
    //them mat hang vao hoa don
    private void AddPackageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPackageActionPerformed
        // TODO add your handling code here:
        String billcode, bookcode, price, amount, totalprice;
        billcode = MaHD.getText();
        bookcode = MaSach.getSelectedItem().toString();
        price = GiaTri.getText();
        amount = SoLuong.getText();
        totalprice = String.valueOf(Integer.valueOf(price) * Integer.valueOf(amount));
         
        TotalPrice.setText(totalprice);
        
            try {
                ps = con.prepareStatement("INSERT CHITIETHOADON(MaHD, MaSach, GiaTri, SoLuong, ThanhTien)"
                        + "VALUES (?,?,?,?,?)");
                ps.setString(1, billcode);
                ps.setString(2, bookcode);
                ps.setString(3, price);
                ps.setString(4, amount);
                ps.setString(5, totalprice);
                ps.executeUpdate();
                
                loadBillInfo();
                //cập nhật số lượng sách trong kho               
                updateBookAmount();
                FinalPrice();
                int asking0 = JOptionPane.showConfirmDialog(null, "Thêm mặt hàng thành công\n Xoá thông tin các trường hiện tại?",
                        "Thông báo",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
                if (asking0 == JOptionPane.YES_OPTION ) {
                    MaSach.setSelectedIndex(0);
                    TenSach.setText("");
                    GiaTri.setText("");
                    SoLuong.setText("");
                    TotalPrice.setText("");
                } else if (asking0 == JOptionPane.NO_OPTION){
                    this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                }
                        
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Đã xảy ra lỗi! Hãy kiểm tra xem:\nMã mặt hàng bạn nhập tồn tại hay chưa?",
                        "Thông báo",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_AddPackageActionPerformed
    //chon ma mat hang
    private void MaSachPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_MaSachPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        String mh = MaSach.getSelectedItem().toString();
        try {
            ps = con.prepareStatement("SELECT TenSach ,GiaTri FROM THONGTINSACH WHERE MaSach = ? ");
            ps.setString(1, mh);
            rs = ps.executeQuery();
            if (rs.next()) {
                String price = rs.getString("GiaTri");
                int defprice  = Integer.parseInt(price);
                GiaTri.setText(String.valueOf(defprice));
                TenSach.setText(rs.getString("TenSach"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MaSachPopupMenuWillBecomeInvisible
    // tu dong tinh tong tien khi nhap so luong
    private void SoLuongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SoLuongKeyReleased
        // TODO add your handling code here:
        String soluong = SoLuong.getText();
        String price = GiaTri.getText();
        int sl = Integer.parseInt(soluong);
        int selprice  = Integer.parseInt(price);
        int getTotal = sl * selprice;
        TotalPrice.setText(String.valueOf(getTotal));
        FinalPrice.setText(String.valueOf(getTotal));
    }//GEN-LAST:event_SoLuongKeyReleased
    //xoa mat hang vua them
    private void DelPackageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelPackageActionPerformed
        // TODO add your handling code here:
        d = (DefaultTableModel)BillInfoTable.getModel();
        int selectIndex = BillInfoTable.getSelectedRow();
        String billcode = d.getValueAt(selectIndex, 0).toString();
        String bookcode = MaSach.getSelectedItem().toString();        
        
        try {         
            ps = con.prepareStatement("DELETE FROM CHITIETHOADON WHERE MaHD = ? AND MaSach = ?");                            
            ps.setString(1, billcode);
            ps.setString(2, bookcode);
            ps.executeUpdate();
            loadBillInfo();
            delBookAmount();
            FinalPrice();
            int asking0 = JOptionPane.showConfirmDialog(null, "Xoá mặt hàng thành công\n Xoá thông tin các trường hiện tại?",
                        "Thông báo",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
                if (asking0 == JOptionPane.YES_OPTION ) {
                    MaSach.setSelectedIndex(0);
                    TenSach.setText("");
                    GiaTri.setText("");
                    SoLuong.setText("");
                    TotalPrice.setText("");
                } else if (asking0 == JOptionPane.NO_OPTION){
                    this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                }                  
        } catch (SQLException ex) {
                Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);          
        }
    }//GEN-LAST:event_DelPackageActionPerformed
    //thanh toan hoa don
    private void PaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaymentButtonActionPerformed
        // TODO add your handling code here:
        String makh = MaKH.getText();
        String billcode = MaHD.getText();
        String finalprice = FinalPrice.getText();
        String custpay = CustomerPay.getText();
        Integer confinalprice = Integer.valueOf(finalprice);
        Integer concustpay = Integer.valueOf(custpay);
        ExcessCash.setText(String.valueOf(concustpay - confinalprice));
        String excash = ExcessCash.getText();
        JOptionPane.showMessageDialog(this,"Trả lại khách: " + excash +" VNĐ","Thông tin",JOptionPane.INFORMATION_MESSAGE);
        //cap nhat tong so tien KH da mua
        updateBill();      
        //tiếp theo sẽ cập nhật thành tiền tổng hoá đơn
        try {
            ps = con.prepareStatement("UPDATE HOADON SET ThanhTien = ?, MaKH = ? WHERE MaHD = ? ");
            ps.setString(1, finalprice);
            ps.setString(2, makh);
            ps.setString(3, billcode);
            ps.executeUpdate();
            
        } catch (SQLException ex) {
            Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_PaymentButtonActionPerformed
    //tra cuu xem khach hang da ton tai trong csdl chua
    private void FindCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindCustomerActionPerformed
        // TODO add your handling code here:
        String name = TenKH.getText();
        String tel = TelKH.getText();
        
        if (name.equals("") || tel.equals("")) {
            JOptionPane.showMessageDialog(this,"Nhập tên khách hàng và số điện thoại","Thông tin",JOptionPane.ERROR_MESSAGE);
        }
        else {
            try {
                ps = con.prepareStatement("SELECT COUNT(*) AS VAILD FROM KHACHHANG WHERE HoTenKH = ? AND SDT = ?");
                ps.setString(1, name);
                ps.setString(2, tel);
                rs = ps.executeQuery();
                if (rs.next()) {
                    Integer vaild = Integer.valueOf(rs.getString("VAILD"));
                    if (vaild == 1) {
                        JOptionPane.showMessageDialog(this,"Khách hàng đã có thông tin trong hệ thống","Thông tin",JOptionPane.INFORMATION_MESSAGE);
                        ps1 = con.prepareStatement("SELECT MaKH, ThuHang, NgayLapThe FROM KHACHHANG WHERE HoTenKH = ? AND SDT = ?");
                        ps1.setString(1, name);
                        ps1.setString(2, tel);
                        rs1 = ps1.executeQuery();
                        if (rs1.next()) {
                            MaKH.setText(rs1.getString("MaKH"));
                        LevelSelection.setSelectedItem(rs1.getString("ThuHang"));
                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");    
                        try {
                            DateCreate.setDate(sdf.parse(rs1.getString("NgayLapThe")));
                        } catch (ParseException ex) {
                            Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        }

                         AddCustomer.setEnabled(false);
                    }
                    else if (vaild == 0) {
                        JOptionPane.showMessageDialog(this,"Đây là khách hàng mới","Thông tin",JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                else {
                        JOptionPane.showMessageDialog(this,"Đây là khách hàng mới","Thông tin",JOptionPane.INFORMATION_MESSAGE);
                    }
            } catch (SQLException ex) {
                Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_FindCustomerActionPerformed
    //xoá đơn nếu tạo nhầm do lỗi nhân viên
    private void DeleteBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBillActionPerformed
        // TODO add your handling code here:
        String billcode = MaHD.getText();
         try {
            ps = con.prepareStatement("DELETE FROM HOADON WHERE MaHD = ?\n"
                    + "DELETE FROM CHITIETHOADON WHERE MaHD = ?");
            ps.setString(1, billcode);
            ps.setString(2, billcode);
            ps.executeUpdate();
            MaHD.setText("");
            DisableFunction();
            
            JOptionPane.showMessageDialog(this,"Đã xoá đơn vừa tạo","Thông tin",JOptionPane.INFORMATION_MESSAGE);
            
        } catch (SQLException ex) {
            Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DeleteBillActionPerformed
    
    public void EnableFunction() {
        //Enable field input
        MaKH.setEnabled(true);
        TenKH.setEnabled(true);
        TelKH.setEnabled(true);
        LevelSelection.setEnabled(true);
        DateCreate.setEnabled(true);
        MaSach.setEnabled(true);
        TenSach.setEnabled(true);
        GiaTri.setEnabled(true);
        SoLuong.setEnabled(true);
        TotalPrice.setEnabled(true);
        FinalPrice.setEnabled(true);
        CustomerPay.setEnabled(true);
        ExcessCash.setEnabled(true);
        /////////////////////////////
        //Enable button
        AddCustomer.setEnabled(true);
        FindCustomer.setEnabled(true);
        DelPackage.setEnabled(true);
        AddPackage.setEnabled(true);
        PaymentButton.setEnabled(true);
        ///////////////////////////////
    }
    
    public void DisableFunction() {
        //Disable field input
        MaKH.setEnabled(false);
        TenKH.setEnabled(false);
        TelKH.setEnabled(false);
        LevelSelection.setEnabled(false);
        DateCreate.setEnabled(false);
        MaSach.setEnabled(false);
        TenSach.setEnabled(false);
        GiaTri.setEnabled(false);
        SoLuong.setEnabled(false);
        TotalPrice.setEnabled(false);
        FinalPrice.setEnabled(false);
        CustomerPay.setEnabled(false);
        ExcessCash.setEnabled(false);
        /////////////////////////////
        //Disable button
        AddCustomer.setEnabled(false);
        FindCustomer.setEnabled(false);
        DelPackage.setEnabled(false);
        AddPackage.setEnabled(false);
        PaymentButton.setEnabled(false);
        ///////////////////////////////
    }
    
    public void ClearText() {
        MaKH.setText("");
        TenKH.setText("");
        TelKH.setText("");
        LevelSelection.setSelectedIndex(0);
        MaSach.setSelectedIndex(0);
        TenSach.setText("");
        GiaTri.setText("");
        SoLuong.setText("");
        TotalPrice.setText("");
        FinalPrice.setText("");
        CustomerPay.setText("");
        ExcessCash.setText("");
        /////////////////////////////
    }
    
    public void FinalPrice() {
        int sum = 0;
        for (int i = 0; i < BillInfoTable.getRowCount(); i++) {
           sum = sum + Integer.parseInt(BillInfoTable.getValueAt(i, 4).toString());
        }
        String total = Integer.toString(sum);
        FinalPrice.setText(total);
    }
    //cập nhật tổng số tiền khách đã thanh toán tất cả các hoá đơn (bang HOADON
    public void updateBill() {
        String makh = MaKH.getText();
        try {
            ps = con.prepareStatement("SELECT SUM(CAST(ThanhTien as int)) AS TOTAL FROM HOADON WHERE MaKH = ?");
            ps.setString(1, makh);
            rs = ps.executeQuery();
            while (rs.next()) {
                String total = rs.getString("TOTAL");
                ps1 = con.prepareStatement("UPDATE KHACHHANG SET TongGiaTri = ? WHERE MaKH = ?");
                ps1.setString(1, total);
                ps1.setString(2, makh);
                ps1.executeUpdate();
            }
        } catch (SQLException ex) {
            Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // tự động cập nhật số lượng còn lại sau khi thêm mặt hàng vào hoá đơn
    public void updateBookAmount() {
        String bookcode = MaSach.getSelectedItem().toString();
        try {
            ps = con.prepareStatement("SELECT SoLuong FROM THONGTINSACH WHERE MaSach = ?");          
            ps.setString(1, bookcode);
            rs = ps.executeQuery();
            while (rs.next()) {
                Integer getAmount = Integer.valueOf(rs.getString("SoLuong"));
                Integer inputAmount = Integer.valueOf(SoLuong.getText());
                String updateAmount = String.valueOf(getAmount - inputAmount);
                
                ps1 = con.prepareStatement("UPDATE THONGTINSACH SET SoLuong = ? WHERE MaSach = ?");
                ps1.setString(1, updateAmount);
                ps1.setString(2, bookcode);
                ps1.executeUpdate();
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
            
     }
    // tự động cập nhật số lượng còn lại sau khi xoá mặt hàng vào hoá đơn
    public void delBookAmount() {
        String bookcode = MaSach.getSelectedItem().toString();
        try {
            ps = con.prepareStatement("SELECT SoLuong FROM THONGTINSACH WHERE MaSach = ?");
            
            ps.setString(1, bookcode);
            rs = ps.executeQuery();
            while (rs.next()) {
                Integer getAmount = Integer.valueOf(rs.getString("SoLuong"));
                Integer inputAmount = Integer.valueOf(SoLuong.getText());
                String updateAmount = String.valueOf(getAmount + inputAmount);
                
                ps1 = con.prepareStatement("UPDATE THONGTINSACH SET SoLuong = ? WHERE MaSach = ?");
                ps1.setString(1, updateAmount);
                ps1.setString(2, bookcode);
                ps1.executeUpdate();
            }
        } catch (SQLException ex) {
            Logger.getLogger(SalerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
            
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SalerForm dl = new SalerForm();
                dl.setVisible(true);
                dl.setResizable(false);
                dl.setTitle("Mẫu bán hàng");
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCustomer;
    private javax.swing.JButton AddPackage;
    private javax.swing.JTable BillInfoTable;
    private javax.swing.JButton CreateBill;
    private javax.swing.JTextField CustomerPay;
    private org.jdesktop.swingx.JXDatePicker DateBuy;
    private org.jdesktop.swingx.JXDatePicker DateCreate;
    private javax.swing.JButton DelPackage;
    private javax.swing.JButton DeleteBill;
    private javax.swing.JLabel EmployeeCode;
    private javax.swing.JLabel EmployeeName;
    private javax.swing.JTextField ExcessCash;
    private javax.swing.JTextField FinalPrice;
    private javax.swing.JButton FindCustomer;
    private javax.swing.JTextField GiaTri;
    private javax.swing.JButton Help;
    private javax.swing.JComboBox<String> LevelSelection;
    private javax.swing.JTextField MaHD;
    private javax.swing.JTextField MaKH;
    private javax.swing.JComboBox<String> MaSach;
    private javax.swing.JButton PaymentButton;
    private javax.swing.JTextField SoLuong;
    private javax.swing.JTextField TelKH;
    private javax.swing.JTextField TenKH;
    private javax.swing.JTextField TenSach;
    private javax.swing.JTextField TotalPrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
