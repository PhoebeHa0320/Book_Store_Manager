/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BookStoreManager;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSetMetaData;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Random;
import java.util.Vector;
import javax.swing.JFrame;
import net.proteanit.sql.DbUtils;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author honkaiwaifu
 */
public class BookInformation extends javax.swing.JFrame {
    
    
    Connection con = NewConnection.getConnection();
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    PreparedStatement ps, ps0;
    ResultSet rs, rs1, rs2;
    DefaultTableModel d;
    /**
     * Creates new form DAILYDOC
     */
    public BookInformation() {
        initComponents();       
        User_load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        MaSach = new javax.swing.JTextField();
        TenSach = new javax.swing.JTextField();
        TacGia = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        NamXB = new javax.swing.JTextField();
        NhaXB = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookInfoTable = new javax.swing.JTable();
        SaveButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        RefreshButton = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        ExcelExport = new javax.swing.JButton();
        DateImport = new org.jdesktop.swingx.JXDatePicker();
        SearchField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        TheLoai = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        Price = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        SoLuong = new javax.swing.JTextField();
        ExitButton = new javax.swing.JButton();
        NhaCC = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        AboutNhaCC = new javax.swing.JButton();
        GetNhaCC = new javax.swing.JButton();
        SearchSelection = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(230, 34, 34));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THÔNG TIN SÁCH");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Mã sách");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Tên sách");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Tác giả");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Năm xuất bản");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Nhà xuất bản");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Ngày tiếp nhận");

        BookInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên sách", "Thể loại", "Tác giả", "Năm xuất bản", "Nhà xuất bản", "Ngày nhập", "Giá trị", "Số lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BookInfoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BookInfoTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BookInfoTable);
        if (BookInfoTable.getColumnModel().getColumnCount() > 0) {
            BookInfoTable.getColumnModel().getColumn(5).setHeaderValue("Nhà xuất bản");
        }

        SaveButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SaveButton.setText("Lưu");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        EditButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        EditButton.setText("Sửa");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        DeleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DeleteButton.setText("Xoá");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        RefreshButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RefreshButton.setText("Làm mới");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton6.setText("Tìm kiếm");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        ExcelExport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ExcelExport.setText("Xuất Excel");
        ExcelExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcelExportActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Thể loại");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Giá trị");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Số lượng");

        ExitButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ExitButton.setText("Thoát");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Nhà cung cấp");

        AboutNhaCC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AboutNhaCC.setText("?");
        AboutNhaCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutNhaCCActionPerformed(evt);
            }
        });

        GetNhaCC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        GetNhaCC.setText("Lấy thông tin nhà cung cấp");
        GetNhaCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetNhaCCActionPerformed(evt);
            }
        });

        SearchSelection.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        SearchSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn loại tìm kiếm", "Mã sách", "Tên sách", "Thể loại", "Tác giả", "Năm xuất bản", "Nhà xuất bản" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(RefreshButton)
                        .addGap(59, 59, 59)
                        .addComponent(ExcelExport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(MaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(TacGia, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TenSach, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NhaCC, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(GetNhaCC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(AboutNhaCC)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(NhaXB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(NamXB, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(DateImport, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(SoLuong))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(SearchSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(TheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(MaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(TenSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(TacGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(NhaCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AboutNhaCC))
                        .addGap(18, 18, 18)
                        .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(NamXB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(NhaXB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(DateImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(GetNhaCC))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchSelection, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RefreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ExcelExport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SaveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ExitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //Load bảng từ SQL Server
    public void User_load() {
        int c;
        //danh sach thong tin sach
        
        try {
            ps = con.prepareStatement("SELECT * FROM THONGTINSACH");
            rs = ps.executeQuery();
            
            ResultSetMetaData rad = rs.getMetaData();
            c = rad.getColumnCount();
            
            d = (DefaultTableModel)BookInfoTable.getModel();
            d.setRowCount(0);
            
            while (rs.next()) {
                Vector v2 = new Vector();
                for (int i = 1; i <= c; i++) {
                    v2.add(rs.getString("MaSach"));
                    v2.add(rs.getString("TenSach"));
                    v2.add(rs.getString("TheLoai"));
                    v2.add(rs.getString("TacGia"));
                    v2.add(rs.getString("NamXuatBan"));
                    v2.add(rs.getString("NhaXuatBan"));
                    v2.add(rs.getString("NgayNhap"));
                    v2.add(rs.getString("GiaTri"));
                    v2.add(rs.getString("SoLuong"));                  
                    
                }
                d.addRow(v2);
            }
             d.fireTableDataChanged();
        } catch (SQLException ex) {
            Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
        }                                                                                          
    }
    
       
    
    //thêm thông tin sách
    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        //Nguoi dung nhap tu ban phim/////////////
        String bookcode, bookname, type, author, price, year, publishername, providename, date, amount;
        bookcode = MaSach.getText();
        bookname = TenSach.getText();
        type = TheLoai.getText();
        author = TacGia.getText();
        price = Price.getText();
        year = NamXB.getText();
        publishername = NhaXB.getText();
        providename = NhaCC.getText();
        date = sdf.format(DateImport.getDate());
        amount = SoLuong.getText();
        
        if (bookcode.equals("") ||
            bookname.equals("") ||
            type.equals("") ||
            author.equals("") ||
            price.equals("") ||
            year.equals("") ||
            publishername.equals("") ||
            providename.equals("") ||
            date.equals("") ||
            amount.equals("")) 
        {
             JOptionPane.showMessageDialog(this,"Vui lòng nhập đầy đủ thông tin",
                "Thông báo",JOptionPane.ERROR_MESSAGE);
            
        }
        else 
        {
            try {
                // TODO add your handling code here:    
                ps = con.prepareStatement("INSERT THONGTINSACH (MaSach, TenSach, TheLoai, TacGia, "
                        + "NamXuatBan, NhaXuatBan, NgayNhap, GiaTri, SoLuong) VALUES (?,?,?,?,?,?,?,?,?)");
                ps.setString(1,bookcode);
                ps.setString(2,bookname);
                ps.setString(3,type);
                ps.setString(4,author);
                ps.setString(5,year);
                ps.setString(6,publishername);
                ps.setString(7,date);
                ps.setString(8, price);
                ps.setString(9,amount);
                ps.executeUpdate();

                addNHACUNGCAP();
                int asking0 = JOptionPane.showConfirmDialog(null, "Thêm mặt hàng thành công\n Xoá thông tin các trường hiện tại?",
                        "Thông báo",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
                if (asking0 == JOptionPane.YES_OPTION ) {
                    MaSach.setText("");
                    TenSach.setText("");
                    TheLoai.setText("");
                    TacGia.setText("");
                    Price.setText("");
                    NamXB.setText("");
                    NhaXB.setText("");
                    NhaCC.setText("");
                    SoLuong.setText("");

                    SearchSelection.setSelectedIndex(0);
                    User_load();
                } else if (asking0 == JOptionPane.NO_OPTION){
                    this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                } 
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Đã xảy ra lỗi! Hãy kiểm tra xem:\nMã mặt hàng bạn nhập tồn tại hay chưa?",
                        "Thông báo",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SaveButtonActionPerformed
    //chon ban ghi tren bang
    private void BookInfoTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BookInfoTableMouseClicked
        // TODO add your handling code here:
        SimpleDateFormat sdf0 = new SimpleDateFormat("yyyy-MM-dd");
        d = (DefaultTableModel)BookInfoTable.getModel();
        int selectIndex = BookInfoTable.getSelectedRow();        
        MaSach.setText(d.getValueAt(selectIndex, 0).toString());
        TenSach.setText(d.getValueAt(selectIndex, 1).toString());
        TheLoai.setText(d.getValueAt(selectIndex, 2).toString());
        TacGia.setText(d.getValueAt(selectIndex, 3).toString());
        NamXB.setText(d.getValueAt(selectIndex, 4).toString());        
        NhaXB.setText(d.getValueAt(selectIndex, 5).toString());
        try {
            DateImport.setDate(sdf0.parse(d.getValueAt(selectIndex, 6).toString()));
        } catch (ParseException ex) {
            Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
        }
        Price.setText(d.getValueAt(selectIndex, 7).toString());      
        SoLuong.setText(d.getValueAt(selectIndex, 8).toString());
        
        MaSach.setEditable(false);
        SaveButton.setEnabled(false);
    }//GEN-LAST:event_BookInfoTableMouseClicked
    //sua ban ghi
    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        // TODO add your handling code here:
        d = (DefaultTableModel)BookInfoTable.getModel();
        int selectIndex = BookInfoTable.getSelectedRow(); 
        String bookcode, bookname, type, author, price, year, publishername, date, amount;
        bookcode = d.getValueAt(selectIndex, 0).toString();
        bookname = TenSach.getText();
        type = TheLoai.getText();
        author = TacGia.getText();
        price = Price.getText();
        year = NamXB.getText();
        publishername = NhaXB.getText();      
        date = sdf.format(DateImport.getDate());
        amount = SoLuong.getText();
        
        if (bookname.equals("") ||
            type.equals("") ||
            author.equals("") ||
            price.equals("") ||
            year.equals("") ||
            publishername.equals("") ||
            date.equals("") ||
            amount.equals("")) 
        {
             JOptionPane.showMessageDialog(this,"Vui lòng nhập đầy đủ thông tin",
                "Thông báo",JOptionPane.ERROR_MESSAGE);
            
        }
        else 
        {   
            try {
                // TODO add your handling code here:    
                ps = con.prepareStatement("UPDATE THONGTINSACH SET TenSach = ? , TheLoai = ? , TacGia = ?, "
                        + "NamXuatBan = ? , NhaXuatBan = ?  , NgayNhap = ? , GiaTri = ? , SoLuong = ? WHERE MaSach = ?");

                ps.setString(1,bookname);
                ps.setString(2,type);
                ps.setString(3,author);
                ps.setString(4,year);
                ps.setString(5,publishername);
                ps.setString(6,date);
                ps.setString(7,price);
                ps.setString(8,amount);
                ps.setString(9,bookcode);
                ps.executeUpdate();

                updateNHACUNGCAP();
                int asking0 = JOptionPane.showConfirmDialog(null, "Cập nhật mặt hàng thành công\n Xoá thông tin các trường hiện tại?",
                        "Thông báo",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
                if (asking0 == JOptionPane.YES_OPTION ) {
                    MaSach.setEditable(true);
                    MaSach.setText("");
                    TenSach.setText("");
                    TheLoai.setText("");
                    TacGia.setText("");
                    Price.setText("");
                    NamXB.setText("");
                    NhaXB.setText("");
                    NhaCC.setText("");
                    SoLuong.setText("");

                    SaveButton.setEnabled(true);
  
                    SearchSelection.setSelectedIndex(0);
                    User_load();
                } else if (asking0 == JOptionPane.NO_OPTION){
                    this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                } 
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Đã xảy ra lỗi! Hãy kiểm tra xem:\nMã mặt hàng bạn nhập tồn tại hay chưa?",
                        "Thông báo",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_EditButtonActionPerformed
    //xoa ban ghi
    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        d = (DefaultTableModel)BookInfoTable.getModel();
        int selectIndex = BookInfoTable.getSelectedRow();
        String bookcode = d.getValueAt(selectIndex, 0).toString();
        try {         
            ps = con.prepareStatement("DELETE FROM THONGTINSACH WHERE THONGTINSACH.MaSach = ?\n"
                                    + "DELETE FROM NHACUNGCAP WHERE NHACUNGCAP.MaSach = ?");                            
            ps.setString(1,bookcode);  
            ps.setString(2,bookcode);  
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Xoá thông tin mặt hàng thành công!","Thông tin",JOptionPane.INFORMATION_MESSAGE);       
            
            MaSach.setEditable(true);
            MaSach.setText("");
            TenSach.setText("");
            TheLoai.setText("");
            TacGia.setText("");
            Price.setText("");
            NamXB.setText("");
            NhaXB.setText("");
            NhaCC.setText("");
            SoLuong.setText("");
            SaveButton.setEnabled(true);
            
            SearchSelection.setSelectedIndex(0);
            User_load();
            
            
            } catch (SQLException ex) {
                Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_DeleteButtonActionPerformed
    //lam moi form
    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        // TODO add your handling code here:
        MaSach.setEditable(true);
        MaSach.setText("");
        TenSach.setText("");
        TheLoai.setText("");
        TacGia.setText("");
        Price.setText("");
        NamXB.setText("");
        NhaXB.setText("");
        NhaCC.setText("");
        SoLuong.setText("");
               
        SaveButton.setEnabled(true);
        SearchSelection.setSelectedIndex(0);
        User_load();
    }//GEN-LAST:event_RefreshButtonActionPerformed
    //tinh nang tim kiem ban ghi
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String search = SearchField.getText();
        String typesearch = SearchSelection.getSelectedItem().toString();
        try {
            switch (typesearch) {
                case "Mã sách" -> {
                    ps = con.prepareStatement("SELECT * FROM THONGTINSACH WHERE MaSach = ?");
                    ps.setString(1,search);
                    rs = ps.executeQuery();
                    BookInfoTable.setModel(DbUtils.resultSetToTableModel(rs));
                }
                case "Tên sách" -> {
                    ps = con.prepareStatement("SELECT * FROM THONGTINSACH WHERE TenSach = ?");
                    ps.setString(1,search);
                    rs = ps.executeQuery();
                    BookInfoTable.setModel(DbUtils.resultSetToTableModel(rs));
                }
                case "Thể loại" -> {
                    ps = con.prepareStatement("SELECT * FROM THONGTINSACH WHERE TheLoai = ?");
                    ps.setString(1,search);
                    rs = ps.executeQuery();
                    BookInfoTable.setModel(DbUtils.resultSetToTableModel(rs));
                }
                case "Tác giả" -> {
                    ps = con.prepareStatement("SELECT * FROM THONGTINSACH WHERE TacGia = ?");
                    ps.setString(1,search);
                    rs = ps.executeQuery();
                    BookInfoTable.setModel(DbUtils.resultSetToTableModel(rs));
                }
                case "Năm xuất bản" -> {
                    ps = con.prepareStatement("SELECT * FROM THONGTINSACH WHERE NamXuatBan = ?");
                    ps.setString(1,search);
                    rs = ps.executeQuery();
                    BookInfoTable.setModel(DbUtils.resultSetToTableModel(rs));
                }
                case "Nhà xuất bản" -> {
                    ps = con.prepareStatement("SELECT * FROM THONGTINSACH WHERE NhaXuatBan = ?");
                    ps.setString(1,search);
                    rs = ps.executeQuery();
                    BookInfoTable.setModel(DbUtils.resultSetToTableModel(rs));
                }
                default -> JOptionPane.showMessageDialog(this,"Chưa chọn loại tìm kiếm","Tìm kiếm", JOptionPane.ERROR_MESSAGE);
            }
           
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Không tìm thấy theo yêu cầu","Tìm kiếm", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_ExitButtonActionPerformed
    
    private void AboutNhaCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutNhaCCActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this,"Cung cấp thông tin nhà cung cấp ở đây\n"
                + "Trường thông tin không thể bỏ qua nếu không phần mềm sẽ không cập nhật vào bảng 'Nhà cung cấp'\n"
                + "Có thể cập nhật lại trường này sau khi thêm hoặc sửa chữa","Thông tin", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_AboutNhaCCActionPerformed
    //thông tin nhà cung cấp
    private void GetNhaCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetNhaCCActionPerformed
        // TODO add your handling code here:
        d = (DefaultTableModel)BookInfoTable.getModel();
        int selectIndex = BookInfoTable.getSelectedRow(); 
        String bookcode, bookname, type, author, price, year, publishername,  date, amount;
        bookcode = d.getValueAt(selectIndex, 0).toString();
        bookname = TenSach.getText();
        type = TheLoai.getText();
        author = TacGia.getText();
        price = Price.getText();
        year = NamXB.getText();
        publishername = NhaXB.getText();
        date = sdf.format(DateImport.getDate());
        amount = SoLuong.getText();
        
        if (bookname.equals("") ||
            type.equals("") ||
            author.equals("") ||
            price.equals("") ||
            year.equals("") ||
            publishername.equals("") ||
            date.equals("") ||
            amount.equals("")) 
        {
             JOptionPane.showMessageDialog(this,"Vui lòng nhập đầy đủ thông tin",
                "Thông báo",JOptionPane.ERROR_MESSAGE);
            
        }
        else 
        {   
            try {
                // TODO add your handling code here:    
                ps = con.prepareStatement("SELECT TenNCC FROM NHACUNGCAP WHERE MaSach = ?");               
                ps.setString(1,bookcode);
                
                rs = ps.executeQuery();
                if (rs.next()) {
                    JOptionPane.showMessageDialog(null, "Tìm kiếm thành công",
                            "Thông báo",JOptionPane.INFORMATION_MESSAGE);
                    NhaCC.setText(rs.getString("TenNCC"));
                }
                else {
                    JOptionPane.showMessageDialog(null, "Không tìm thấy theo yêu cầu",
                            "Thông báo",JOptionPane.INFORMATION_MESSAGE);
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_GetNhaCCActionPerformed
    //Xuất Excel
    private void ExcelExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcelExportActionPerformed
        // TODO add your handling code here:
        TableModel model = BookInfoTable.getModel();
        JFileChooser excelExportChooser = new JFileChooser();
        excelExportChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        excelExportChooser.setDialogTitle("Save Excel File");
        //filter the file
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "*.xls", "xls", "xlsx", "xlsn");
        excelExportChooser.addChoosableFileFilter(filter);
        excelExportChooser.setFileFilter(filter);
        int excelchooser = excelExportChooser.showSaveDialog(null);

        if (excelchooser == JFileChooser.APPROVE_OPTION) {
            Workbook workbook = new XSSFWorkbook();
            Sheet sheet = workbook.createSheet("SalesReturnsDetails");

            Row row;
            Cell cell;

            try {
                // write the column headers
                row = sheet.createRow(0);
                for (int j = 0; j < model.getColumnCount(); j++) {
                    cell = row.createCell(j);
                    cell.setCellValue(model.getColumnName(j));
                }

                for (int i = 0; i < model.getRowCount(); i++) {

                    row = sheet.createRow(i + 1);

                    for (int j = 0; j < model.getColumnCount(); j++) {
                        cell = row.createCell(j);
                        cell.setCellValue(model.getValueAt(i, j).toString());

                    }

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }

            FileOutputStream excelFIS;

            try {
                excelFIS = new FileOutputStream(excelExportChooser.getSelectedFile() + ".xlsx");
                workbook.write(excelFIS);
                JOptionPane.showMessageDialog(null, "Xuất thành công",
                            "Thông báo",JOptionPane.INFORMATION_MESSAGE);
                workbook.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_ExcelExportActionPerformed

    
    /**
     * @param args the command line arguments
     */
    
    //phan nay thuc hien cac truy can tren ban NHACUNGCAP
    //dong thoi them thong tin vao bang NHACUNGCAP trong DATABASE
    private void addNHACUNGCAP() {
        String bookcode, providename, publishercode, amount, price, date, totalprice ;
        Integer convertPrice, convertSL ;   
        //tao ma nxb ngau nhien 6 chu so
        Random rnd = new Random();
        int number = rnd.nextInt(999999);
        // this will convert any number sequence into 6 character.
        publishercode = String.format("%06d", number);
        ///////////////////////////////////////////      
        providename = NhaCC.getText();
        bookcode = MaSach.getText();
        amount = SoLuong.getText(); 
        price = Price.getText();
        date = sdf.format(DateImport.getDate());
        //de tinh tong toan bo gia sach nhap, ta lay so luong nhan voi gia
        convertPrice = Integer.parseInt(price);
        convertSL = Integer.parseInt(amount);
        totalprice = Integer.toString(convertPrice * convertSL);
        //để đề phòng một nhà cung cấp sinh ra 2 mã, ta sẽ kiểm tra xem nhà cung cấp đã tồn tại tron csdl chưa
        try {
            
            ps0 = con.prepareStatement("SELECT MaNCC, COUNT(MaNCC) AS VAILD FROM NHACUNGCAP WHERE TenNCC = ? GROUP BY MaNCC");
            ps0.setString(1, providename);
            rs = ps0.executeQuery();
            if (rs.next()) {
                String getMa = String.valueOf(rs.getString("MaNCC"));
                Integer vaild = Integer.valueOf(rs.getString("VAILD"));
                if (vaild >= 1) {
                    ps = con.prepareStatement("INSERT NHACUNGCAP (MaNCC, TenNCC, MaSach, SoLuong, GiaTri, NgayNhap, TongGiaTri) "
                    + "VALUES (?,?,?,?,?,?,?)");
                    ps.setString(1, getMa);
                    ps.setString(2, providename);
                    ps.setString(3, bookcode);
                    ps.setString(4, amount);
                    ps.setString(5, price);
                    ps.setString(6, date);
                    ps.setString(7,totalprice);
                    ps.executeUpdate();
                }               
            }
            else {
                    ps = con.prepareStatement("INSERT NHACUNGCAP (MaNCC, TenNCC, MaSach, SoLuong, GiaTri, NgayNhap, TongGiaTri) "
                    + "VALUES (?,?,?,?,?,?,?)");
                    ps.setString(1, publishercode);
                    ps.setString(2, providename);
                    ps.setString(3, bookcode);
                    ps.setString(4, amount);
                    ps.setString(5, price);
                    ps.setString(6, date);
                    ps.setString(7,totalprice);
                    ps.executeUpdate();
                }
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Đã xảy ra lỗi từ thông tin nhập!",
                    "Thông báo",JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //dong thoi capnhat thong tin vao bang NHACUNGCAP trong DATABASE
    private void updateNHACUNGCAP() {
        d = (DefaultTableModel)BookInfoTable.getModel();
        int selectIndex = BookInfoTable.getSelectedRow(); 
        String bookcode, providename, publishercode, amount, price, date, totalprice ;
        Integer convertPrice, convertSL ;  
        //tao ma nxb ngau nhien 6 chu so
        Random rnd = new Random();
        int number = rnd.nextInt(999999);
        // this will convert any number sequence into 6 character.
        publishercode = String.format("%06d", number);
        ///////////////////////////////////////////      
        providename = NhaCC.getText();
        bookcode = d.getValueAt(selectIndex, 0).toString();
        amount = SoLuong.getText(); 
        price = Price.getText();
        date = sdf.format(DateImport.getDate());
        //de tinh tong toan bo gia sach nhap, ta lay so luong nhan voi gia
        convertPrice = Integer.parseInt(price);
        convertSL = Integer.parseInt(amount);
        totalprice = Integer.toString(convertPrice * convertSL);
        
        try {            
            ps0 = con.prepareStatement("SELECT MaNCC, COUNT(MaNCC) AS VAILD FROM NHACUNGCAP WHERE TenNCC = ? GROUP BY MaNCC");
            ps0.setString(1, providename);
            rs = ps0.executeQuery();
            if (rs.next()) {
                String getMa = String.valueOf(rs.getString("MaNCC"));
                Integer vaild = Integer.valueOf(rs.getString("VAILD"));
                if (vaild >= 1) {
                    ps = con.prepareStatement("UPDATE NHACUNGCAP SET TenNCC = ? , SoLuong = ? , GiaTri = ?, NgayNhap = ?, TongGiaTri = ? "
                    + "WHERE MaNCC= ? AND MaSach = ?");
                    
                    ps.setString(1, providename);          
                    ps.setString(2, amount);
                    ps.setString(3, price);
                    ps.setString(4, date);
                    ps.setString(5,totalprice);
                    ps.setString(6, getMa);
                    ps.setString(7, bookcode);
                    ps.executeUpdate();
                }              
            }
            else { //Thay TenNCC nhung TenNCC khong ton tai trong csdl
                    ps = con.prepareStatement("UPDATE NHACUNGCAP SET  MaNCC = ? ,TenNCC = ? , SoLuong = ? , GiaTri = ?, NgayNhap = ?, TongGiaTri = ? "
                    + "WHERE MaSach = ?");
                    ps.setString(1, publishercode);
                    ps.setString(2, providename);          
                    ps.setString(3, amount);
                    ps.setString(4, price);
                    ps.setString(5, date);
                    ps.setString(6,totalprice);                  
                    ps.setString(7, bookcode);
                    ps.executeUpdate();
                }
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Đã xảy ra lỗi từ thông tin nhập!",
                    "Thông báo",JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                BookInformation bookinfo = new BookInformation();
                bookinfo.setVisible(true);
                bookinfo.setResizable(false);
                bookinfo.setTitle("Hồ sơ đại lý");
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboutNhaCC;
    private javax.swing.JTable BookInfoTable;
    private org.jdesktop.swingx.JXDatePicker DateImport;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JButton ExcelExport;
    private javax.swing.JButton ExitButton;
    private javax.swing.JButton GetNhaCC;
    private javax.swing.JTextField MaSach;
    private javax.swing.JTextField NamXB;
    private javax.swing.JTextField NhaCC;
    private javax.swing.JTextField NhaXB;
    private javax.swing.JTextField Price;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JButton SaveButton;
    private javax.swing.JTextField SearchField;
    private javax.swing.JComboBox<String> SearchSelection;
    private javax.swing.JTextField SoLuong;
    private javax.swing.JTextField TacGia;
    private javax.swing.JTextField TenSach;
    private javax.swing.JTextField TheLoai;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
