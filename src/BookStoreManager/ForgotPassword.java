/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BookStoreManager;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author honkaiwaifu
 */
public class ForgotPassword extends javax.swing.JFrame {
    
    Connection con = NewConnection.getConnection();
    PreparedStatement ps;
    ResultSet rs;
    /**
     * Creates new form ForgotPassword
     */
    public ForgotPassword() {
        initComponents();
        User_load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        RecoveryField = new javax.swing.JTextField();
        VerifyButton = new javax.swing.JButton();
        StatusLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Changepass = new javax.swing.JButton();
        Cancelbuttom = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        NewPassField = new javax.swing.JPasswordField();
        ConfirmPassField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("NHẬP KHOÁ PHỤC HỒI VÀ ẤN XÁC NHẬN");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Sau khi mã được xác nhận, bạn sẽ được đặt lại mật khẩu mới");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Khoá phục hồi");

        RecoveryField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RecoveryFieldKeyPressed(evt);
            }
        });

        VerifyButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        VerifyButton.setText("Xác nhận");
        VerifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerifyButtonActionPerformed(evt);
            }
        });

        StatusLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        StatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StatusLabel.setText("Trạng thái");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Mật khẩu mới");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Xác nhận mật khẩu");

        Changepass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Changepass.setText("Thay đổi");
        Changepass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangepassActionPerformed(evt);
            }
        });

        Cancelbuttom.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Cancelbuttom.setText("Huỷ");
        Cancelbuttom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelbuttomActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 0, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Quên khoá phục hồi");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel7MousePressed(evt);
            }
        });

        NewPassField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NewPassFieldKeyPressed(evt);
            }
        });

        ConfirmPassField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ConfirmPassFieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(RecoveryField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(VerifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(StatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(NewPassField)
                                    .addComponent(ConfirmPassField, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))))
                        .addGap(0, 45, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(Cancelbuttom, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Changepass, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(87, 87, 87))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RecoveryField, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                        .addComponent(VerifyButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(StatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(NewPassField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(ConfirmPassField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Changepass)
                    .addComponent(Cancelbuttom))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void VerifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerifyButtonActionPerformed
        // TODO add your handling code here:
        verifyrecovery();
    }//GEN-LAST:event_VerifyButtonActionPerformed

    private void ChangepassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangepassActionPerformed
        // TODO add your handling code here:
        changepassword();
    }//GEN-LAST:event_ChangepassActionPerformed
    //quá đen nếu bạn mất khoá phục hồi
    private void jLabel7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MousePressed
        // TODO add your handling code here:
       JOptionPane.showMessageDialog(null, "Nếu bạn quên khoá khôi phục, chương trình không thể giúp bạn phục hồi tài khoản",
               "Quên mật khẩu",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabel7MousePressed

    private void CancelbuttomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelbuttomActionPerformed
        // TODO add your handling code here:
        int asking0 = JOptionPane.showConfirmDialog(null, "Bạn chắc chắn muốn thoát?","Quên mật khẩu",JOptionPane.YES_NO_OPTION,JOptionPane.ERROR_MESSAGE);
        if (asking0 == JOptionPane.YES_OPTION ) {
            this.dispose();
            new LoginForm().setVisible(true);
            
        } else if (asking0 == JOptionPane.NO_OPTION){
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_CancelbuttomActionPerformed

    private void RecoveryFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RecoveryFieldKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            {
                verifyrecovery();
            }
    }//GEN-LAST:event_RecoveryFieldKeyPressed

    private void ConfirmPassFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ConfirmPassFieldKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            {
                if(NewPassField.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Vui lòng xác nhận mật khẩu mới!",
                    "Thay đổi mật khẩu",JOptionPane.ERROR_MESSAGE);
                } else {
                    changepassword();
                }
            }
    }//GEN-LAST:event_ConfirmPassFieldKeyPressed

    private void NewPassFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NewPassFieldKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            {
                if(NewPassField.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Vui lòng nhập mật khẩu mới!",
                    "Thay đổi mật khẩu",JOptionPane.ERROR_MESSAGE);
                } else {
                    ConfirmPassField.requestFocus();
                }
            }
    }//GEN-LAST:event_NewPassFieldKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int asking0 = JOptionPane.showConfirmDialog(null, "Bạn chắc chắn muốn thoát?","Quên mật khẩu",JOptionPane.YES_NO_OPTION,JOptionPane.ERROR_MESSAGE);
        if (asking0 == JOptionPane.YES_OPTION ) {
            this.dispose();
            new LoginForm().setVisible(true);
            
        } else if (asking0 == JOptionPane.NO_OPTION){
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_formWindowClosing
    private void User_load() {
        NewPassField.setEchoChar('*');
        ConfirmPassField.setEchoChar('*');
        NewPassField.setEnabled(false);
        ConfirmPassField.setEnabled(false);
    }
    //xác thực khoá
    private void verifyrecovery () {
        String getrecovery = RecoveryField.getText();
        if (getrecovery.equals("")) {
            JOptionPane.showMessageDialog(this,"Vui lòng nhập khoá phục hồi!",
                "Thông báo",JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                ps = con.prepareStatement("SELECT * FROM DANGNHAP WHERE Reckey = ? ");
                ps.setString(1, getrecovery);
                rs = ps.executeQuery();
                if (rs.next()) {
                    StatusLabel.setText("Chào mừng trở lại " + rs.getString(2));
                    StatusLabel.setForeground(Color.green);
                    jLabel7.setEnabled(false);
                    NewPassField.setEnabled(true);
                    ConfirmPassField.setEnabled(true);
                    RecoveryField.setEnabled(false);
                    VerifyButton.setEnabled(false);
        
                } else {
                    StatusLabel.setText("Mã không tồn tại!");
                    StatusLabel.setForeground(Color.red);
                }
                
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            
        }
    }
    //thay đổi mật khẩu
    private void changepassword() {
        String getrecovery = RecoveryField.getText();
        String newpass = NewPassField.getText();
        String confirmpass = ConfirmPassField.getText();
        if(newpass.equals("")){
            JOptionPane.showMessageDialog(this,"Vui lòng nhập mật khẩu mới!",
                    "Thay đổi mật khẩu",JOptionPane.ERROR_MESSAGE);
        }  
        else if(confirmpass.equals("")){
            JOptionPane.showMessageDialog(this,"Vui lòng xác nhận mật khẩu mới!",
                    "Thay đổi mật khẩu",JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                if (newpass.equals(confirmpass)) { 
                    ps = con.prepareStatement("UPDATE DANGNHAP SET password = ? WHERE Reckey = ? ");
                    ps.setString(1, newpass);
                    ps.setString(2, getrecovery);
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null,"Thay đổi mật khẩu thành công!\nVui lòng đăng nhập lại!"
                                            + "\nSau khi đăng nhập lại, hãy xem mã phục hồi mới mà hệ thống đã tạo.",
                                        "",JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                    LoginForm lf = new LoginForm();
                    lf.setVisible(true);
                    lf.setResizable(false);
                    lf.pack();
                    lf.setLocationRelativeTo(null);
                    lf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                } 
                    else if (!newpass.equals(confirmpass)) {
                        JOptionPane.showMessageDialog(null,"Mật khẩu mới không trùng khớp",
                            "Thay đổi mật khẩu",JOptionPane.ERROR_MESSAGE);
                        NewPassField.setText("");
                        ConfirmPassField.setText(""); 
                    } 
                } catch (SQLException ex) {
                    java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ForgotPassword fp = new ForgotPassword();
                fp.setVisible(true);
                fp.setResizable(false);
                fp.setTitle("Quên mật khẩu");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancelbuttom;
    private javax.swing.JButton Changepass;
    private javax.swing.JPasswordField ConfirmPassField;
    private javax.swing.JPasswordField NewPassField;
    private javax.swing.JTextField RecoveryField;
    private javax.swing.JLabel StatusLabel;
    private javax.swing.JButton VerifyButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
